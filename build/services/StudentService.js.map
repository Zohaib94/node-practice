{"version":3,"sources":["../../src/services/StudentService.js"],"names":["StudentService","Student","findAll","students","map","category","StudentSerializer","toResource","ErrorResponse","message","params","create","newStudent"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;IAEMA,c;;;;;;;;;;;;;;;;uBAGuBC,oBAAQC,OAAR,E;;;AAAjBC,gBAAAA,Q;iDAECA,QAAQ,CAACC,GAAT,CAAa,UAACC,QAAD;AAAA,yBAAcC,8BAAkBC,UAAlB,CAA6BF,QAA7B,CAAd;AAAA,iBAAb,C;;;;;sBAED,IAAIG,yBAAJ,CAAkB,YAAMC,OAAxB,EAAiC,GAAjC,C;;;;;;;;;;;;;;;;;;;2HAIiBC,M;;;;;;;;uBAEET,oBAAQU,MAAR,CAAeD,MAAf,C;;;AAAnBE,gBAAAA,U;kDAECN,8BAAkBC,UAAlB,CAA6BK,UAA7B,C;;;;;sBAED,IAAIJ,yBAAJ,CAAkB,aAAMC,OAAxB,EAAiC,GAAjC,C;;;;;;;;;;;;;;;;;;;;eAKGT,c","sourcesContent":["import Student from '../models/Student';\nimport StudentSerializer from '../serializers/StudentSerializer';\nimport ErrorResponse from '../responses/ErrorResponse';\n\nclass StudentService {\n  static async findAll() {\n    try {\n      const students = await Student.findAll();\n\n      return students.map((category) => StudentSerializer.toResource(category));\n    } catch (error) {\n      throw new ErrorResponse(error.message, 422);\n    }\n  }\n\n  static async createStudent(params) {\n    try {\n      const newStudent = await Student.create(params);\n\n      return StudentSerializer.toResource(newStudent);\n    } catch (error) {\n      throw new ErrorResponse(error.message, 422);\n    }\n  }\n}\n\nexport default StudentService;\n"],"file":"StudentService.js"}
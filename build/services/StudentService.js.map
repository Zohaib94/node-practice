{"version":3,"sources":["../../src/services/StudentService.js"],"names":["StudentService","Student","findAll","students","map","category","StudentSerializer","toResource","ErrorResponse","message","params","create","newStudent","studentID","findByPk","student","Error","getISICCard","isicCard","createISICCard","ISICCardSerializer","createTransaction","payment","TransactionSerializer"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;IAEMA,c;;;;;;;;;;;;;;;;uBAGuBC,oBAAQC,OAAR,E;;;AAAjBC,gBAAAA,Q;iDAECA,QAAQ,CAACC,GAAT,CAAa,UAACC,QAAD;AAAA,yBAAcC,8BAAkBC,UAAlB,CAA6BF,QAA7B,CAAd;AAAA,iBAAb,C;;;;;sBAED,IAAIG,yBAAJ,CAAkB,YAAMC,OAAxB,EAAiC,GAAjC,C;;;;;;;;;;;;;;;;;;;2HAIiBC,M;;;;;;;;uBAEET,oBAAQU,MAAR,CAAeD,MAAf,C;;;AAAnBE,gBAAAA,U;kDAECN,8BAAkBC,UAAlB,CAA6BK,UAA7B,C;;;;;sBAED,IAAIJ,yBAAJ,CAAkB,aAAMC,OAAxB,EAAiC,GAAjC,C;;;;;;;;;;;;;;;;;;;4HAIkBI,S,EAAWH,M;;;;;;;;uBAEbT,oBAAQa,QAAR,CAAiBD,SAAjB,C;;;AAAhBE,gBAAAA,O;;oBAEDA,O;;;;;sBACG,IAAIC,KAAJ,CAAU,mBAAV,C;;;;uBAGaD,OAAO,CAACE,WAAR,E;;;AAAjBC,gBAAAA,Q;;qBAEAA,Q;;;;;sBACI,IAAIF,KAAJ,CAAU,kCAAV,C;;;;uBAEWD,OAAO,CAACI,cAAR,CAAuBT,MAAvB,C;;;AAAjBQ,gBAAAA,Q;kDACOE,+BAAmBb,UAAnB,CAA8BW,QAA9B,C;;;;;;;;;sBAGH,IAAIV,yBAAJ,CAAkB,aAAMC,OAAxB,EAAiC,GAAjC,C;;;;;;;;;;;;;;;;;;;6HAImBI,S,EAAWH,M;;;;;;;;uBAEdT,oBAAQa,QAAR,CAAiBD,SAAjB,C;;;AAAhBE,gBAAAA,O;;oBAEDA,O;;;;;sBACG,IAAIC,KAAJ,CAAU,mBAAV,C;;;;uBAGeD,OAAO,CAACE,WAAR,E;;;AAAjBC,gBAAAA,Q;;oBAEDA,Q;;;;;sBACG,IAAIF,KAAJ,CAAU,oCAAV,C;;;;uBAEgBE,QAAQ,CAACG,iBAAT,CAA2BX,MAA3B,C;;;AAAhBY,gBAAAA,O;kDACCC,kCAAsBhB,UAAtB,CAAiCe,OAAjC,C;;;;;;;;;sBAGH,IAAId,yBAAJ,CAAkB,aAAMC,OAAxB,EAAiC,GAAjC,C;;;;;;;;;;;;;;;;;;;;eAKGT,c","sourcesContent":["import Student from '../models/Student';\nimport StudentSerializer from '../serializers/StudentSerializer';\nimport ISICCardSerializer from '../serializers/ISICCardSerializer';\nimport TransactionSerializer from '../serializers/TransactionSerializer';\nimport ErrorResponse from '../responses/ErrorResponse';\n\nclass StudentService {\n  static async findAll() {\n    try {\n      const students = await Student.findAll();\n\n      return students.map((category) => StudentSerializer.toResource(category));\n    } catch (error) {\n      throw new ErrorResponse(error.message, 422);\n    }\n  }\n\n  static async createStudent(params) {\n    try {\n      const newStudent = await Student.create(params);\n\n      return StudentSerializer.toResource(newStudent);\n    } catch (error) {\n      throw new ErrorResponse(error.message, 422);\n    }\n  }\n\n  static async createISICCard(studentID, params) {\n    try {\n      const student = await Student.findByPk(studentID);\n\n      if (!student) {\n        throw new Error('Student Not Found');\n      }\n\n      let isicCard = await student.getISICCard();\n\n      if (isicCard) {\n        throw new Error('Student already has an ISIC Card');\n      } else {\n        isicCard = await student.createISICCard(params);\n        return ISICCardSerializer.toResource(isicCard);\n      }\n    } catch (error) {\n      throw new ErrorResponse(error.message, 422);\n    }\n  }\n\n  static async generatePayment(studentID, params) {\n    try {\n      const student = await Student.findByPk(studentID);\n\n      if (!student) {\n        throw new Error('Student Not Found');\n      }\n\n      const isicCard = await student.getISICCard();\n\n      if (!isicCard) {\n        throw new Error('Student does not have an ISIC Card');\n      } else {\n        const payment = await isicCard.createTransaction(params);\n        return TransactionSerializer.toResource(payment);\n      }\n    } catch (error) {\n      throw new ErrorResponse(error.message, 422);\n    }\n  }\n}\n\nexport default StudentService;\n"],"file":"StudentService.js"}
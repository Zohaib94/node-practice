{"version":3,"sources":["../../../../src/controllers/api/v1/ISICCardsController.js"],"names":["ISICCardsController","mergeParams","post","request","response","console","log","params","StudentService","createISICCard","studentId","body","isicCard","json","SuccessResponse","status","code","getResource"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;AAEA;AAEA;AACA;AACA;AACA,IAAMA,mBAAmB,GAAG,qBAAO;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAAP,CAA5B;AAEAD,mBAAmB,CAACE,IAApB,CAAyB,GAAzB;AAAA,2FAA8B,iBAAOC,OAAP,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1BC,YAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,MAApB;AAF0B;AAAA,mBAGHC,2BAAeC,cAAf,CAA8BN,OAAO,CAACI,MAAR,CAAeG,SAA7C,EAAwDP,OAAO,CAACQ,IAAhE,CAHG;;AAAA;AAGpBC,YAAAA,QAHoB;AAI1BR,YAAAA,QAAQ,CAACS,IAAT,CAAc,IAAIC,2BAAJ,CAAoBF,QAApB,CAAd;AAJ0B;AAAA;;AAAA;AAAA;AAAA;AAM1BP,YAAAA,OAAO,CAACC,GAAR;AACAF,YAAAA,QAAQ,CAACW,MAAT,CAAgB,YAAIC,IAApB,EAA0BH,IAA1B,CAA+B,YAAII,WAAJ,EAA/B;;AAP0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAAA;AAAA;AAAA;AAAA;eAWejB,mB","sourcesContent":["import { Router } from 'express';\nimport StudentService from '../../../services/StudentService';\nimport SuccessResponse from '../../../responses/SuccessResponse';\n\n// Router is isolated instance of middleware and routes capable of only routing and middleware functions\n\n// mergeparams to receive params from parent\n\n// middleware Middleware functions are functions that have access to the\n// request object (req), the response object (res), and the next middleware function\n// in the applicationâ€™s request-response cycle.\nconst ISICCardsController = Router({ mergeParams: true });\n\nISICCardsController.post('/', async (request, response) => {\n  try {\n    console.log(request.params);\n    const isicCard = await StudentService.createISICCard(request.params.studentId, request.body);\n    response.json(new SuccessResponse(isicCard));\n  } catch (err) {\n    console.log(err);\n    response.status(err.code).json(err.getResource());\n  }\n});\n\nexport default ISICCardsController;\n"],"file":"ISICCardsController.js"}
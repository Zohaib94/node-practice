{"version":3,"sources":["../../../../src/controllers/api/v1/StudentsController.js"],"names":["StudentsController","get","request","response","StudentService","findAll","students","json","SuccessResponse","console","log","status","code","getResource","post","createStudent","body","student","use","ISICCardsController"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;AACA,IAAMA,kBAAkB,GAAG,sBAA3B;AAEAA,kBAAkB,CAACC,GAAnB,CAAuB,GAAvB;AAAA,2FAA4B,iBAAOC,OAAP,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEDC,2BAAeC,OAAf,EAFC;;AAAA;AAElBC,YAAAA,QAFkB;AAGxBH,YAAAA,QAAQ,CAACI,IAAT,CAAc,IAAIC,2BAAJ,CAAoBF,QAApB,CAAd;AAHwB;AAAA;;AAAA;AAAA;AAAA;AAKxBG,YAAAA,OAAO,CAACC,GAAR;AACAP,YAAAA,QAAQ,CAACQ,MAAT,CAAgB,YAAIC,IAApB,EAA0BL,IAA1B,CAA+B,YAAIM,WAAJ,EAA/B;;AANwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA;AAUAb,kBAAkB,CAACc,IAAnB,CAAwB,GAAxB;AAAA,4FAA6B,kBAAOZ,OAAP,EAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEHC,2BAAeW,aAAf,CAA6Bb,OAAO,CAACc,IAArC,CAFG;;AAAA;AAEnBC,YAAAA,OAFmB;AAGzBd,YAAAA,QAAQ,CAACI,IAAT,CAAc,IAAIC,2BAAJ,CAAoBS,OAApB,CAAd;AAHyB;AAAA;;AAAA;AAAA;AAAA;AAKzBR,YAAAA,OAAO,CAACC,GAAR;AACAP,YAAAA,QAAQ,CAACQ,MAAT,CAAgB,aAAIC,IAApB,EAA0BL,IAA1B,CAA+B,aAAIM,WAAJ,EAA/B;;AANyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AAAA;AAAA;AAAA;AAAA;AAUAb,kBAAkB,CAACkB,GAAnB,CAAuB,wBAAvB,EAAiDC,+BAAjD;eAEenB,kB","sourcesContent":["import { Router } from 'express';\nimport StudentService from '../../../services/StudentService';\nimport SuccessResponse from '../../../responses/SuccessResponse';\nimport ISICCardsController from './ISICCardsController';\n\n// Router is isolated instance of middleware and routes capable of only routing and middleware functions\nconst StudentsController = Router();\n\nStudentsController.get('/', async (request, response) => {\n  try {\n    const students = await StudentService.findAll();\n    response.json(new SuccessResponse(students));\n  } catch (err) {\n    console.log(err);\n    response.status(err.code).json(err.getResource());\n  }\n});\n\nStudentsController.post('/', async (request, response) => {\n  try {\n    const student = await StudentService.createStudent(request.body);\n    response.json(new SuccessResponse(student));\n  } catch (err) {\n    console.log(err);\n    response.status(err.code).json(err.getResource());\n  }\n});\n\nStudentsController.use('/:studentId/isic_cards', ISICCardsController);\n\nexport default StudentsController;\n"],"file":"StudentsController.js"}